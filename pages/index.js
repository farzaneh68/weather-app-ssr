import Head from 'next/head'
import 'bootstrap/dist/css/bootstrap.css';
import { Button, List } from 'reactstrap';
import { useRouter } from 'next/router';
import styles from '../styles/Home.module.css'
import { useState } from 'react';
import { faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons'
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'

export default function Home({ data }) {
  const [city, setCity] = useState('');

  const router = useRouter();


  const handleClick = (e) => {
    router.push(`/?term=${city}`);
    setCity('')
  }

  const handleClickOnCity = (e) => {
    router.push(`/?term=${e.target.innerHTML}`);
  }

  let d = new Date();
  let utc = d.getTime() + d.getTimezoneOffset() * 60000;
  let date = new Date(utc + (1000 * data.timezone))

  return (
    <div className={styles.container}>
      <Head>
        <title>Create weather App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>



      <main className={styles.main}
        style={{
          background: "linear-gradient(to right, rgba(0, 0, 0, 0), rgba(13, 34, 45, .4)) , url('/weather.jpg')  ",
          backgroundSize: "cover"
          
        }}

      >


        <div className='row w-100 justify-content-center' >
          <div className={`col-12 ${styles.weather_app} `}>
            <div className='row' style={{ height: "100%" }} >
              <div className='col-md-7 py-3 px-md-3 px-lg-5 d-flex flex-column justify-content-around' >

                <h3 className={styles.brand} >the.weather</h3>
                <div className='d-flex ' >
                  <h1 className={styles.temp} >{data.main.temp.toFixed(0)}&#176;</h1>
                  <div className='city-time'>
                    <h1 className={styles.city_name} >{data.name}</h1>
                    <small>
                      <span className='time' >{`${date.getHours()}:${date.getMinutes()} - `}</span>
                      <span className='date' >{`${date.toLocaleDateString('en-us', { weekday: 'long' })} ,  ${date.getDate()} ${date.toLocaleDateString('en-us', { month: "short", year: "2-digit" })}  `}</span>
                    </small>

                  </div>

                  <div className={`d-flex flex-column ps-4 ${styles.weather} `} >
                    <img src={`http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`} />
                    <span className={styles.condition} >{data.weather[0].main}</span>
                  </div>
                </div>
              </div>
              <div className={`col-md-5 p-0 d-flex flex-column justify-content-between ${styles.serch_section} `} >
                <div className={styles.search} >

                  <input className={` ms-5 ${styles.search_input}`} value={city} type="text" placeholder="Another Location" onChange={(e) => setCity(e.target.value)} />

                  <div className={styles.search_icon_wrapper} >
                    <span onClick={handleClick} className={styles.search_icon} >
                      <FontAwesomeIcon icon={faMagnifyingGlass} />
                    </span>
                  </div>

                </div>
                <List className={`px-5 ${styles.cities} `} type="unstyled">
                  <li onClick={handleClickOnCity} >
                    Birmingham
                  </li>
                  <li onClick={handleClickOnCity}>
                    Manchester
                  </li>
                  <li onClick={handleClickOnCity}>
                    New York
                  </li>
                  <li onClick={handleClickOnCity}>
                    California
                  </li>
                </List>
                <div className={`mx-5 ${styles.border_bottom} `}></div>
                <List className={`px-5 ${styles.details} `} type="unstyled">
                  <h4>Weather Details</h4>
                  <li>
                    <span>cloudy</span>
                    <span>{`${data.clouds.all}%`}</span>
                  </li>
                  <li>
                    <span>Humidity</span>
                    <span>{`${data.main.humidity}%`}</span>
                  </li>
                  <li>
                    <span>Wind</span>
                    <span>{`${data.wind.speed}km/h`}</span>
                  </li>

                </List>

              </div>

            </div>
          </div>
        </div>
      </main>
    </div>
  )
}


export async function getServerSideProps({ query }) {
  if (!query.term)
    query.term = 'London'
  const res = await fetch(
    `https://api.openweathermap.org/data/2.5/weather?q=${query.term}&units=metric&appid=685bdc2640bc214bed2a1c2f57d6709d`
  );


  const data = await res.json();
  if (!data) {
    return {
      notFound: true,
    };
  }
  console.log("------>", data);
  return { props: { data } };
}
